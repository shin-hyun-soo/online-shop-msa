pipeline {
    agent any
    tools {
        maven 'Maven'
    }
    environment {
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Build Services') {
            parallel {
                stage('Build Product Service') {
                    steps {
                        dir('services/product-service') {
                            sh 'mvn clean package'
                        }
                    }
                }
                stage('Build Order Service') {
                    steps {
                        dir('services/order-service') {
                            sh 'mvn clean package'
                        }
                    }
                }
                stage('Build User Service') {
                    steps {
                        dir('services/user-service') {
                            sh 'mvn clean package'
                        }
                    }
                }
            }
        }
        stage('Build and Push Docker Images') {
            steps {
                script {
                    def services = ['product-service', 'order-service', 'user-service']
                    services.each { service ->
                        dir("services/${service}") {
                            sh """
                                aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
                                docker build -t ${service}:${IMAGE_TAG} .
                                docker tag ${service}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${service}:${IMAGE_TAG}
                                docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${service}:${IMAGE_TAG}
                            """
                        }
                    }
                }
            }
        }
        stage('Update Kubernetes Manifests') {
            steps {
                script {
                    def services = ['product-service', 'order-service', 'user-service']
                    services.each { service ->
                        sh """
                            sed -i 's|image: .*${service}:.*|image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${service}:${IMAGE_TAG}|' kubernetes/${service}-deployment.yaml
                            git add kubernetes/${service}-deployment.yaml
                        """
                    }
                    sh """
                        git config user.email "jenkins@example.com"
                        git config user.name "Jenkins"
                        git commit -m "Update service images to ${IMAGE_TAG}"
                        git push origin main
                    """
                }
            }
        }
        stage('Trigger ArgoCD Sync') {
            steps {
                sh 'argocd app sync ${ARGOCD_APP_NAME}'
            }
        }
    }
    post {
        always {
            sh 'docker logout ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com'
        }
    }
}
